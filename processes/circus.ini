[watcher:gocreate]
cmd=/app/gocreate/env/bin/gunicorn --access-logfile - --workers 2 --bind unix:/app/gocreate.sock gocreate.wsgi:application
#cmd=chaussette --fd $(circus.sockets.gocreate) --backend gevent gocreate.wsgi.application
#cmd=chaussette --fd $(circus.sockets.gocreate) --backend meinheld gocreate.wsgi.application
uid = ubuntu
endpoint_owner = ubuntu
use_sockets = True
virtualenv_py_ver = 3.7
numprocesses = 2 
virtualenv = /app/gocreate/env
copy_env = True
copy_path = True
stdout_stream.class = FileStream
stdout_stream.filename = /var/log/django.log
stderr_stream.class = FileStream
stderr_stream.filename = /var/log/django_err.log
stdout_stream.max_bytes = 1073741824
stdout_stream.backup_count = 3
stderr_stream.max_bytes = 1073741824
stderr_stream.backup_count = 3
working_dir = /app/gocreate

[socket:gocreate]
#host=127.0.0.1
#port=8000
path = /app/gocreate.sock
family = AF_UNIX

[env:gocreate]
PYTHONPATH=/app/gocreate

# For django-q
[watcher:gocreate_q]
cmd = python manage.py qcluster
numprocesses = 1
working_dir = /app/gocreate
virtualenv = /app/gocreate/env/
copy_env = True
copy_path = True
stdout_stream.class = FileStream
stdout_stream.filename = /var/log/webapp_q.log
stdout_stream.max_bytes = 1073741824
stdout_stream.backup_count = 3
stderr_stream.class = FileStream
stderr_stream.filename = /var/log/webapp_q_err.log
stderr_stream.max_bytes = 1073741824
stderr_stream.backup_count = 3

[env:gocreate_q]
PYTHONPATH=/app/gocreate